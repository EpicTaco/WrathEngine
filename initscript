#This is the example entry file for the engine. An extension to the wrath.client.Game class must be present.
#It should also be noted that a global variable named 'parentObject' must be assigned to said Game class for
#additional scripts to work. Variable 'scriptsManager' is pre-defined for you (Java Object PythonScriptManager).
#Consult documentation on that class for more information, or take a look at our Wiki on our Github page!
#Github Wiki Page: http://www.github.com/epictaco/wrathengine/wiki

from wrath.client import Game
from wrath.client.events import GameEventHandler
from wrath.client import RenderMode
from wrath.test.client import TempWorld
from java.io import File

gameObject = None
world = None

class EventHandler(GameEventHandler):
	def onGameOpen(self):
		gameObject.getInputManager().bindDefaultEngineKeys()
		
	def onGameClose(self):
		if world is not None:
			world.save()
			
	def onTick(self):
		pass
		
	def onResolutionChange(self, oldWidth, oldHeight, newWidth, newHeight):
		gameObject.getWindowManager().setResolution(oldWidth, oldHeight)
		
	def onWindowOpen(self):
		gameObject.getInputManager().setCursorEnabled(True)

class CustomGame(Game):
	def __init__(self):
		Game.__init__(self, "Game Name", "Game Version", 30.0, RenderMode.Mode2D)
		self.getEventManager().addGameEventHandler(EventHandler())
		#Setting this object to global variable 'parentObject'
		scriptsManager.setGlobalVariable("parentObject", self)
		if File("etc/world.dat").exists():
			world = TempWorld.load(File("etc/world.dat"))
		else:
			world = TempWorld(64, File("etc/world.dat"))
		
	def render(self):
		if world is not None:
			world.drawWorld()
		
gameObject = CustomGame()
scriptsManager.loadScriptsFromDirectory(File("etc/scripts/autoexec"), True, True)
gameObject.start()